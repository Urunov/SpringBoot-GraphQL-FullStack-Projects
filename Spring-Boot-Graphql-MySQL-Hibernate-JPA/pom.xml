<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.5.RELEASE</version>
        <relativePath />
    </parent>

    <artifactId>spring-boot-graphql-example</artifactId>
    <name>spring-boot-graphql-example</name>
    <description>This example project is based on the graphql-java-examples/hibernate-example on github and the guide found here https://www.howtographql.com/graphql-java/0-introduction/.</description>
    <packaging>war</packaging>

    <dependencies>
        <!-- GraphQL dependencies -->
        <dependency> <!-- Loads and powers our GraphQL schema -->
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java-tools</artifactId>
            <version>4.3.0</version>
        </dependency>
        <dependency> <!-- generates GraphQL schema from data model classes -->
            <groupId>com.introproventures</groupId>
            <artifactId>graphql-jpa-query-schema</artifactId>
            <version>0.3.27</version>
            <type>pom</type>
        </dependency>

        <!-- JPA dependencies -->
        <dependency> <!-- reduce CRUD boilerplate code -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- spring boot dependencies -->
        <dependency> <!-- provides the functionality to support our endpoints through web protocols -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency> <!-- useful for development building and debugging -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>

        <dependency>
            <!-- hosts our schema at the /graphql endpoint in our spring 
                context -->
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-spring-boot-starter</artifactId>
            <version>4.0.0</version>
        </dependency>

        <dependency> <!-- a web based UI for interacting with the /graphql endpoint, with knowledge 
                of the schema at the endpoint -->
            <groupId>com.graphql-java</groupId>
            <artifactId>graphiql-spring-boot-starter</artifactId>
            <version>4.0.0</version>
        </dependency>



        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>



        <!-- misc. dependencies -->
        <dependency> <!-- unit testing -->
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>
    <build>
        <finalName>spring-boot-graphql-example</finalName>
    </build>
</project>
